{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"my titanic tabular fastai","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNTygdUjXfEYa1djSBBjODp"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"MdAObQqvDX7i","colab_type":"code","colab":{}},"source":["from fastai import *\n","from fastai.tabular import * \n","import numpy as np\n","import pandas as pd\n","import pandas as pd\n","\n","train= pd.read_csv('https://raw.githubusercontent.com/rpi-techfundamentals/fall2018-materials/master/input/train.csv')\n","test = pd.read_csv('https://raw.githubusercontent.com/rpi-techfundamentals/fall2018-materials/master/input/test.csv')\n","\n","\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"uAJJaqD0D21m","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":317},"outputId":"881570cc-376a-4bf5-fdea-3d3b30b34ea5","executionInfo":{"status":"ok","timestamp":1586823701775,"user_tz":300,"elapsed":377,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["#Create a categorical variable from the family count \n","def family(x):\n","    if x < 2:\n","        return 'Single'\n","    elif x == 2:\n","        return 'Couple'\n","    elif x <= 4:\n","        return 'InterM'\n","    else:\n","        return 'Large'\n","\n","\n","for df in [train, test]:\n","    df['Title'] = df['Name'].str.split(',').str[1].str.split(' ').str[1]\n","    df['Title'] = df['Title'].replace(['Lady', 'the Countess', 'Countess', 'Capt', 'Col', 'Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona', 'Ms', 'Mme', 'Mlle'], 'Rare')\n","    df['Age']=df['Age'].fillna(df['Age'].median())\n","    df['Fare']=df['Fare'].fillna(df['Fare'].median())\n","    df['Embarked']=df['Embarked'].fillna('S')\n","    df['NameLength'] = df['Name'].map(lambda x: len(x))\n","    df['FamilyS'] = df['SibSp'] + df['Parch'] + 1\n","    df['FamilyS'] = df['FamilyS'].apply(family)\n","train.isnull().sum(axis = 0)\n","\n","\n"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age              0\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          687\n","Embarked         0\n","Title            0\n","NameLength       0\n","FamilyS          0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"DRA_S0hUEHvy","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":276},"outputId":"07eddb38-aff3-423f-ea46-3126c6fd9e8e","executionInfo":{"status":"ok","timestamp":1586823730387,"user_tz":300,"elapsed":433,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["train.head()\n"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>NameLength</th>\n","      <th>FamilyS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>23</td>\n","      <td>Couple</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","      <td>Mrs.</td>\n","      <td>51</td>\n","      <td>Couple</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>Miss.</td>\n","      <td>22</td>\n","      <td>Single</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","      <td>Mrs.</td>\n","      <td>44</td>\n","      <td>Couple</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>24</td>\n","      <td>Single</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  ...  Title NameLength  FamilyS\n","0            1         0       3  ...    Mr.         23   Couple\n","1            2         1       1  ...   Mrs.         51   Couple\n","2            3         1       3  ...  Miss.         22   Single\n","3            4         1       1  ...   Mrs.         44   Couple\n","4            5         0       3  ...    Mr.         24   Single\n","\n","[5 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"knltEXfEEuCD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":223},"outputId":"24e955df-2183-4bd6-dd25-1d39f18be149","executionInfo":{"status":"ok","timestamp":1586823889930,"user_tz":300,"elapsed":462,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["train.tail()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>NameLength</th>\n","      <th>FamilyS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Montvila, Rev. Juozas</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211536</td>\n","      <td>13.00</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>Rev.</td>\n","      <td>21</td>\n","      <td>Single</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Graham, Miss. Margaret Edith</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30.00</td>\n","      <td>B42</td>\n","      <td>S</td>\n","      <td>Miss.</td>\n","      <td>28</td>\n","      <td>Single</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n","      <td>female</td>\n","      <td>28.0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.45</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>Miss.</td>\n","      <td>40</td>\n","      <td>InterM</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Behr, Mr. Karl Howell</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30.00</td>\n","      <td>C148</td>\n","      <td>C</td>\n","      <td>Mr.</td>\n","      <td>21</td>\n","      <td>Single</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Dooley, Mr. Patrick</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.75</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","      <td>Mr.</td>\n","      <td>19</td>\n","      <td>Single</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     PassengerId  Survived  Pclass  ...  Title NameLength  FamilyS\n","886          887         0       2  ...   Rev.         21   Single\n","887          888         1       1  ...  Miss.         28   Single\n","888          889         0       3  ...  Miss.         40   InterM\n","889          890         1       1  ...    Mr.         21   Single\n","890          891         0       3  ...    Mr.         19   Single\n","\n","[5 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"i0mQwjmLEaL4","colab_type":"code","colab":{}},"source":["dep_var = 'Survived'\n","cat_names = ['Pclass', 'Sex', 'Embarked', 'Title', 'FamilyS']\n","cont_names = ['Age', 'Fare', 'SibSp', 'Parch', 'NameLength']\n","procs = [FillMissing, Categorify, Normalize]\n","test_data = (TabularList.from_df(test, path='.', cat_names=cat_names, cont_names=cont_names, procs=procs))\n","\n","\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AJ_EjRsXEnAG","colab_type":"code","colab":{}},"source":["data = (TabularList.from_df(train, path='.', cat_names=cat_names, cont_names=cont_names, procs=procs)\n","                           .split_by_idx(list(range(0,200)))\n","                           .label_from_df(cols=dep_var)\n","                           .add_test(test_data, label=0)\n","                           .databunch())\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"cZNwMrV2E0gd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":206},"outputId":"eed2600b-b2b9-47ad-b430-e088724a62a5","executionInfo":{"status":"ok","timestamp":1586823939561,"user_tz":300,"elapsed":310,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["#Shows the Data\n","data.show_batch()\n"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>FamilyS</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>NameLength</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>Single</td>\n","      <td>0.7213</td>\n","      <td>-0.4855</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-0.9553</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>Couple</td>\n","      <td>0.9553</td>\n","      <td>0.3597</td>\n","      <td>0.5043</td>\n","      <td>-0.4658</td>\n","      <td>0.1226</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>C</td>\n","      <td>Mr.</td>\n","      <td>Single</td>\n","      <td>-0.1366</td>\n","      <td>-0.4986</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-1.3864</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>C</td>\n","      <td>Mr.</td>\n","      <td>Single</td>\n","      <td>-0.1366</td>\n","      <td>-0.4987</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-1.2786</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>S</td>\n","      <td>Mrs.</td>\n","      <td>Couple</td>\n","      <td>0.2534</td>\n","      <td>0.3700</td>\n","      <td>0.5043</td>\n","      <td>-0.4658</td>\n","      <td>2.0628</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"myEeb2Z6FGZ3","colab_type":"code","colab":{}},"source":["#Define our Learner\n","learn = tabular_learner(data, layers=[300,100], metrics=accuracy)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"x90Fds-8FQvf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":658},"outputId":"98158ff0-7b38-48d4-b915-313a2b6ffceb","executionInfo":{"status":"ok","timestamp":1586824029840,"user_tz":300,"elapsed":2745,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["learn.lr_find()\n","learn.recorder.plot()\n","\n"],"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","                background: #F44336;\n","            }\n","        </style>\n","      <progress value='9' class='' max='10' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      90.00% [9/10 00:01<00:00]\n","    </div>\n","    \n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>accuracy</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>0.683773</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>0.671631</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.670848</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.659345</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>0.636201</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.616647</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>0.588498</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>7</td>\n","      <td>0.562451</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>8</td>\n","      <td>1.226587</td>\n","      <td>#na#</td>\n","      <td>00:00</td>\n","    </tr>\n","  </tbody>\n","</table><p>\n","\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","            .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","                background: #F44336;\n","            }\n","        </style>\n","      <progress value='1' class='' max='10' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      10.00% [1/10 00:00<00:00 1.5896]\n","    </div>\n","    "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["LR Finder is complete, type {learner_name}.recorder.plot() to see the graph.\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"m0fEQCBpFapN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":269},"outputId":"cba440f5-8bb4-4646-86f2-35e36bc2fe5a","executionInfo":{"status":"ok","timestamp":1586824217425,"user_tz":300,"elapsed":1943,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["#fit the learner\n","learn.fit(7, 1e-2)  #Number of epocs and the learning rate. learn.save('final_train')\n"],"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>accuracy</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>0.671115</td>\n","      <td>0.564098</td>\n","      <td>0.745000</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>0.553607</td>\n","      <td>0.465013</td>\n","      <td>0.825000</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.518573</td>\n","      <td>0.470840</td>\n","      <td>0.810000</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.488571</td>\n","      <td>0.419472</td>\n","      <td>0.840000</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>0.465498</td>\n","      <td>0.442976</td>\n","      <td>0.800000</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.449192</td>\n","      <td>0.437106</td>\n","      <td>0.825000</td>\n","      <td>00:00</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>0.435978</td>\n","      <td>0.434563</td>\n","      <td>0.795000</td>\n","      <td>00:00</td>\n","    </tr>\n","  </tbody>\n","</table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"7vkwp8JkGIPk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":363},"outputId":"74ac86ad-2aed-4ed2-d299-555f78c96474","executionInfo":{"status":"ok","timestamp":1586824335431,"user_tz":300,"elapsed":318,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["#Show the results\n","learn.show_results(rows=10)"],"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>FamilyS</th>\n","      <th>Age</th>\n","      <th>Fare</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>NameLength</th>\n","      <th>target</th>\n","      <th>prediction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>Couple</td>\n","      <td>-0.6046</td>\n","      <td>-0.4982</td>\n","      <td>0.5043</td>\n","      <td>-0.4658</td>\n","      <td>-0.4163</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>C</td>\n","      <td>Mrs.</td>\n","      <td>Couple</td>\n","      <td>0.6433</td>\n","      <td>0.7144</td>\n","      <td>0.5043</td>\n","      <td>-0.4658</td>\n","      <td>2.6017</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>S</td>\n","      <td>Miss.</td>\n","      <td>Single</td>\n","      <td>-0.2926</td>\n","      <td>-0.4855</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-0.5241</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>S</td>\n","      <td>Mrs.</td>\n","      <td>Couple</td>\n","      <td>0.4093</td>\n","      <td>0.3700</td>\n","      <td>0.5043</td>\n","      <td>-0.4658</td>\n","      <td>1.8472</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>Single</td>\n","      <td>0.4093</td>\n","      <td>-0.4831</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-0.3085</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>Q</td>\n","      <td>Mr.</td>\n","      <td>Single</td>\n","      <td>-0.1366</td>\n","      <td>-0.4754</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-1.1708</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>Mr.</td>\n","      <td>Single</td>\n","      <td>1.8912</td>\n","      <td>0.3466</td>\n","      <td>-0.4610</td>\n","      <td>-0.4658</td>\n","      <td>-0.4163</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>S</td>\n","      <td>Master.</td>\n","      <td>Large</td>\n","      <td>-2.1644</td>\n","      <td>-0.2364</td>\n","      <td>2.4351</td>\n","      <td>0.8064</td>\n","      <td>0.3382</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>S</td>\n","      <td>Mrs.</td>\n","      <td>InterM</td>\n","      <td>-0.2146</td>\n","      <td>-0.4247</td>\n","      <td>-0.4610</td>\n","      <td>2.0785</td>\n","      <td>2.3861</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>C</td>\n","      <td>Mrs.</td>\n","      <td>Couple</td>\n","      <td>-1.2285</td>\n","      <td>-0.0661</td>\n","      <td>0.5043</td>\n","      <td>-0.4658</td>\n","      <td>0.8771</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"ZvxT3t1MG17i","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"933b63ba-1c5a-4cc4-d745-a3ac6c7e7e58","executionInfo":{"status":"ok","timestamp":1586824474555,"user_tz":300,"elapsed":326,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["#This will get predictions\n","predictions, *_ = learn.get_preds(DatasetType.Test)\n","labels = to_np(np.argmax(predictions, 1))\n","labels.shape"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/html":[""],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"execute_result","data":{"text/plain":["(418,)"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"IEIxbb7vHIwh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"865edd71-3c66-417f-d21f-3c7f9f07e0a0","executionInfo":{"status":"ok","timestamp":1586824527378,"user_tz":300,"elapsed":329,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["labels"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, ..., 1, 0, 0, 1])"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"2GninDXpHLyA","colab_type":"code","colab":{}},"source":["#Writing to File\n","submission=pd.DataFrame(test.loc[:,['PassengerId']])\n","submission['Survived']=labels\n","#Any files you save will be available in the output tab below\n","\n","submission.to_csv('submission.csv', index=False)\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"V4JtjegkHpu1","colab_type":"code","colab":{}},"source":["x = pd.read_csv('submission.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xuty0eZmHsDw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":424},"outputId":"cb12aa7f-1d13-4522-d704-ee4877f5358c","executionInfo":{"status":"ok","timestamp":1586824762110,"user_tz":300,"elapsed":336,"user":{"displayName":"Harvey Dytch","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjKUG7F8fE3aQ07LkqFuOqISBsHH76ciJ3oOoeN=s64","userId":"16233254677165118549"}}},"source":["x"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>1305</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>414</th>\n","      <td>1306</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>415</th>\n","      <td>1307</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>1308</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>1309</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows × 2 columns</p>\n","</div>"],"text/plain":["     PassengerId  Survived\n","0            892         0\n","1            893         0\n","2            894         0\n","3            895         0\n","4            896         1\n","..           ...       ...\n","413         1305         0\n","414         1306         1\n","415         1307         0\n","416         1308         0\n","417         1309         1\n","\n","[418 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"yAd9qpyIIFFw","colab_type":"code","colab":{}},"source":["from google.colab import files\n","files.download('submission.csv')"],"execution_count":0,"outputs":[]}]}